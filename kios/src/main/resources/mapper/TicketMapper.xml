<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.kios.mapper.TicketMapper">
    <select id="get" parameterType="com.example.kios.model.request.TicketRequest"
            resultType="com.example.kios.model.response.TicketResponse">
        SELECT ticket.*, employee.room
        from ticket
        LEFT JOIN employee ON ticket.employee_id = employee.id
        LEFT JOIN service_banking ON ticket.service_id = service_banking.id

        <where>
            <if test="phone != null and phone !='' ">
                and ticket.phone = #{phone}
            </if>
            <if test="code != null and code !='' ">
                and ticket.code = #{code}
            </if>
            <if test="name != null and name !='' ">
                and ticket.name ILIKE CONCAT('%' || #{name} || '%')
            </if>
            <if test="date != null and date !='' ">
                and TO_CHAR(ticket.date, 'yyyy-mm-dd') = #{date}
            </if>
            <if test="time != null and date !='' ">
                and TO_CHAR(ticket.time, 'HH24:MI:SS') = #{time}
            </if>
            <if test="employeeId != null and employeeId !='' ">
                and employee.id = #{employeeId}::uuid
            </if>
            <if test="serviceId != null and serviceId !='' ">
                and service_banking.id = #{serviceId}::uuid
            </if>
            <if test="accountId != null and accountId !='' ">
                and employee.account_id = #{accountId}::uuid
            </if>
        </where>

        ORDER BY "date" DESC

        <if test="limit >0">
            OFFSET (#{page} - 1) * #{limit} FETCH NEXT #{limit} ROWS ONLY
        </if>
    </select>

    <select id="getForTV" parameterType="com.example.kios.model.request.TicketRequest"
            resultType="com.example.kios.model.response.TicketResponse">
        SELECT ticket.*, employee.room
        from ticket
        LEFT JOIN employee ON ticket.employee_id = employee.id
        LEFT JOIN service_banking ON ticket.service_id = service_banking.id

        <where>
            <if test="date != null and date !='' ">
                and TO_CHAR(ticket.date, 'yyyy-mm-dd') = #{date}
            </if>
            and 2 > status
        </where>
        ORDER BY status DESC
        limit 10
    </select>

    <select id="countTicket" parameterType="com.example.kios.model.request.TicketRequest" resultType="Integer">
        select count(*) from ticket
        LEFT JOIN employee ON ticket.employee_id = employee.id
        LEFT JOIN service_banking ON ticket.service_id = service_banking.id

        <where>
            <if test="phone != null and phone !='' ">
                and ticket.phone = #{phone}
            </if>
            <if test="code != null and code !='' ">
                and ticket.code = #{code}
            </if>
            <if test="name != null and name !='' ">
                and ticket.name ILIKE CONCAT('%' || #{name} || '%')
            </if>
            <if test="date != null and date !='' ">
                and TO_CHAR(ticket.date, 'yyyy-mm-dd') = #{date}
            </if>
            <if test="time != null and date !='' ">
                and TO_CHAR(ticket.time, 'HH24:MI:SS') = #{time}
            </if>
            <if test="employeeId != null and employeeId !='' ">
                and employee.id = #{employeeId}::uuid
            </if>
            <if test="serviceId != null and serviceId !='' ">
                and service_banking.id = #{serviceId}::uuid
            </if>
        </where>
    </select>

    <select id="create" parameterType="com.example.kios.model.request.TicketRequest"
            resultType="com.example.kios.model.response.TicketResponse">
        INSERT INTO ticket(
            "name",
            phone,
            "date",
            "time",
            service_id,
            employee_id,
            code,
            status,
            stt
        )VALUES(
            #{name},
            #{phone},
            #{date},
            #{time},
            #{serviceId},
            #{employeeId},
            #{code},
            #{status},
            #{stt}
        )
        RETURNING *;
    </select>

    <update id="update" parameterType="com.example.kios.model.request.TicketRequest">
        UPDATE ticket
        SET
            "name" = #{name},
            phone = #{phone},
            service_id = #{serviceId},
            employee_id = #{employeeId},
            status = #{status}
        WHERE id = #{id}::uuid
     </update>

    <update id="evaluate" parameterType="com.example.kios.model.request.TicketRequest">
        UPDATE ticket
        SET
            attitude = #{attitude},
            comment = #{comment}
        WHERE id = #{id}::uuid
     </update>
</mapper>